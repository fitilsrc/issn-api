version: '3.9'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - 5432:5432
    volumes:
      - ./.docker/postgres_issn_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${APP_POSTGRES_DB}
      POSTGRES_USER: ${APP_POSTGRES_USER}
      POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${APP_POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - issn-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    hostname: keycloak
    command: start-dev --http-relative-path /auth
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${APP_POSTGRES_DB}
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: ${APP_POSTGRES_USER}
      KC_DB_PASSWORD: ${APP_POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      PROXY_ADDRESS_FORWARDING: "true"
      KC_PROXY: edge
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - issn-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - ./.docker/rabbitmq:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - issn-network

  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    container_name: auth
    env_file:
      - .env
    depends_on:
      - keycloak
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start:dev auth
    restart: unless-stopped
    networks:
      - issn-network

  presence:
    build:
      context: ./
      dockerfile: ./apps/presence/Dockerfile
    container_name: presence
    env_file:
      - .env
    depends_on:
      - postgres
      - keycloak
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start:dev presence
    restart: unless-stopped
    networks:
      - issn-network

  persons:
    build:
      context: ./
      dockerfile: ./apps/persons/Dockerfile
    container_name: persons
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start:dev persons
    restart: unless-stopped
    networks:
      - issn-network

  api:
    build:
      context: ./
      dockerfile: ./apps/issn-api/Dockerfile
    container_name: api
    ports:
      - 9000:9000
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - keycloak
      - auth
      - presence
      - persons
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: yarn start:dev api
    restart: on-failure
    networks:
      - issn-network

volumes:
  postgres_issn_data:
    driver: local
  rabbitmq:

networks:
  issn-network:
    external: true
